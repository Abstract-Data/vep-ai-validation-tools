[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "vep-ai-validation-tools"
version = "0.1.2"
description = "A Python package built with UV"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "John R. Eakin", email = "dev@abstractdata.io"},
]
keywords = ["python", "package"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "icecream>=2.1.5",
    "phonenumbers>=9.0.11",
    # Add your project dependencies here
    "pydantic>=2.9.2",
    "pydantic-ai[eval,logfire,mcp]>=0.6.2",
    "pydantic-graph>=0.6.2",
    "rapidfuzz>=3.13.0",
    "toml>=0.10.2",
    "tomli>=2.2.1",
    "usaddress>=0.5.16",
    "usaddress-scourgify>=0.6.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "bandit>=1.7.0",
    "pyupgrade>=3.15.0",
    "radon>=6.0.0",
    "xenon>=0.9.0",
    "vulture>=2.0.0",
    "pytest-benchmark>=4.0.0",
    "memory-profiler>=0.60.0",
    "psutil>=5.9.0",
    "safety>=2.0.0",
    "pip-audit>=2.0.0",
]

docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]

test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
]

lint = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "bandit>=1.7.0",
    "pyupgrade>=3.15.0",
]

security = [
    "bandit>=1.7.0",
    "safety>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/Abstract-Data/vep-ai-validation-tools"
Repository = "https://github.com/Abstract-Data/vep-ai-validation-tools"
Documentation = "https://github.com/Abstract-Data/vep-ai-validation-tools#readme"
"Bug Tracker" = "https://github.com/Abstract-Data/vep-ai-validation-tools/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/vep_ai_validation_tools"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["vep_ai_validation_tools"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    ".tests.*",
]
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = [".tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/.tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = [".tests"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py"]

[tool.bandit.bandit_baseline]
output_file = "bandit-baseline.json"

[tool.pyupgrade]
py38-plus = true
keep-runtime-typing = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    ".venv",
    ".uv",
    ".mypy_cache",
    ".pytest_cache",
]

[dependency-groups]
dev = [
    "pre-commit>=3.5.0",
]
