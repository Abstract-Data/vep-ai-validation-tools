name: Performance Testing

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: "0 2 * * 0"
  workflow_dispatch:

jobs:
  benchmark:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install UV
        uses: astral-sh/setup-uv@v2
        with:
          version: "latest"

      - name: Cache UV dependencies
        uses: actions/cache@v4
        with:
          path: .uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: uv sync

      - name: Install performance testing tools
        run: |
          uv add --dev pytest-benchmark
          uv add --dev memory-profiler
          uv add --dev psutil

      - name: Run benchmarks
        run: |
          # Run pytest-benchmark if benchmark tests exist
          if [ -d ".tests" ] && find .tests -name "*benchmark*" -o -name "*perf*" | grep -q .; then
            uv run pytest --benchmark-only --benchmark-sort=mean
          else
            echo "No benchmark tests found, skipping performance tests"
          fi

      - name: Upload benchmark results
        uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: .benchmarks/
          if-no-files-found: ignore

  memory-profiling:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install UV
        uses: astral-sh/setup-uv@v2
        with:
          version: "latest"

      - name: Cache UV dependencies
        uses: actions/cache@v4
        with:
          path: .uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: uv sync

      - name: Install profiling tools
        run: uv add --dev memory-profiler psutil

      - name: Run memory profiling
        run: |
          # Create a simple memory profiling script if it doesn't exist
          if [ ! -f ".scripts/profile_memory.py" ]; then
            mkdir -p .scripts
            cat > .scripts/profile_memory.py << 'EOF'
          #!/usr/bin/env python3
          """Simple memory profiling script."""
          import sys
          import os
          sys.path.insert(0, os.path.join(os.path.dirname(__file__), '..', 'src'))

          try:
              from uv_template_project import core
              print("✅ Successfully imported core module")
          except ImportError as e:
              print(f"❌ Failed to import core module: {e}")
              sys.exit(1)
          EOF
          fi

          # Run memory profiling
          uv run python -m memory_profiler .scripts/profile_memory.py

      - name: Upload profiling results
        uses: actions/upload-artifact@v4
        with:
          name: memory-profile
          path: profile_memory.py.lprof
          if-no-files-found: ignore
